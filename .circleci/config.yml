version: 2

jobs:
  build:
    docker:
      - image: "ubuntu:18.04"
    filters:
      branches:
        only:
          - master
    steps:
      - checkout
      - run:
          name: Installing SUDO
          command: 'apt-get update && apt-get install -y sudo && rm -rf /var/lib/apt/lists/*'
      - run:
          name: Installing GCC
          command: 'apt-get update && sudo apt-get install -y gcc g++ build-essential wget unzip git python-dev python3-pip python3 cython3 autotools-dev m4 libicu-dev build-essential libbz2-dev libasio-dev libeigen3-dev freeglut3-dev expat libcairo2-dev'
      - run:
          name: Install CMAKE and Boost
          command: 'apt-get update && sudo apt-get install -y cmake libboost-dev libboost-system-dev libboost-thread-dev libboost-program-options-dev libboost-filesystem-dev nlohmann-json-dev'
      - run:
          name: Build and install libccd 1.4
          command: 'pushd . && wget https://github.com/danfis/libccd/archive/v1.4.zip && unzip v1.4.zip && cd libccd-1.4/src && echo "#define CCD_FLOAT" | cat - ccd/vec3.h > /tmp/out && mv /tmp/out ccd/vec3.h && make -j4 && sudo make install && popd'
      - run:
          name: Check out git submodules
          command: 'git submodule init && git submodule update'
      - run:
          name: Build and install SBPL
          command: 'pushd . && git clone https://github.com/sbpl/sbpl.git && cd sbpl && git checkout 1.3.1 && mkdir build && cd build && cmake .. && make -j4 && sudo make install && popd'
      - run:
          name: Build and install OMPL
          command: 'pushd . && git clone https://github.com/ompl/ompl.git && cd ompl && git checkout 1.5.0 && mkdir build && cd build && cmake .. && make -j4 && sudo make install && popd'
      - run:
          name: Creating Build Files
          command: 'cmake -H. -Bbuild'
      - run:
          name: Build mpb
          command: 'pushd . && cd build && make benchmark && popd'
      - run:
          name: Run benchmark_to create template file
          command: 'pushd . && cd bin && (./benchmark || true) && popd'
      - run:
          name: Install Python dependencies
          command: 'pushd . && cd python && pip3 install -r requirements.txt && popd'
      - run:
          name: Run corridor benchmark
          command: 'pushd . && cd python && python3 benchmark_corridor.py && popd'
      - run:
          name: Clone Bench-MR repository (website)
          command: 'rm -rf .git && mkdir bench-mr && cd bench-mr && git init && git config --local user.email "eric-heiden@outlook.com" && git config --local user.name "eric-heiden" && git remote add origin https://eric-heiden:${GITHUB_TOKEN}@github.com/robot-motion/bench-mr.git && git pull origin docs'
      - run:
          name: Copy benchmark results to Bench-MR website
          command: 'cd /root/project/bench-mr && cp /root/project/python/corridor.md _docs/results/ && cp /root/project/python/corridor_*.png assets/results/'
      - run:
          name: Git add Bench-MR results
          command: 'cd /root/project/bench-mr && git add _docs/results/corridor.md && git add assets/results/corridor_*.png'
      - run:
          name: Commit and push Bench-MR results, if they are different
          command: 'cd /root/project/bench-mr && git diff-index --quiet HEAD || (git commit -m "[CI] Update benchmark results" && git push origin HEAD:docs)'
